openapi: 3.0.3
info:
  title: Storage Facility API
  description: |
    API for accessing storage facility pricing data and REIT occupancy information.
    
    **Features:**
    - Facility-level and market-level pricing data
    - Historical and current pricing information
    - REIT occupancy data for the USA
    - Flexible geography and timeframe filtering
    - Unit size and feature filtering
  version: 1.0.0
  contact:
    name: API Support

servers:
  - url: https://api.example.com/v1
    description: Production server

tags:
  - name: REIT
    description: REIT occupancy information
  - name: Facility Pricing
    description: Facility-level pricing data
  - name: Market Pricing
    description: Market-level pricing data

paths:
  /reit/occupancy/usa:
    post:
      tags:
        - REIT
      summary: Get REIT occupancy data
      description: |
        Gets REIT occupancy information in the USA. This is publicly known information provided 
        by annual reports. Each company provided information on the most relevant CBSAs for their 
        company, therefore not all time frames or CBSAs have data available. This endpoint requires 
        the timeframe.rollup to be set to quarterly.
      operationId: getREITOccupancy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - geography
                - timeframe
              properties:
                geography:
                  $ref: '#/components/schemas/Geography'
                timeframe:
                  $ref: '#/components/schemas/Timeframe'
                companies:
                  type: array
                  items:
                    type: string
                  description: Optional array of company names to filter by
                  example: ["Public Storage", "Extra Space"]
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/REITOccupancyData'

  /reit/occupancy/usa/weighted:
    post:
      tags:
        - REIT
      summary: Get weighted REIT occupancy data
      description: |
        For each period, the occupancy is the weighted average of all available companies' 
        occupancies for that period weighted by the period's revenue. We take a weighted 
        average of all CBSAs in that region using the revenue from all companies with 
        available data.
      operationId: getREITOccupancyWeighted
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - geography
                - timeframe
              properties:
                geography:
                  $ref: '#/components/schemas/Geography'
                timeframe:
                  $ref: '#/components/schemas/Timeframe'
                companies:
                  type: array
                  items:
                    type: string
                  description: Optional array of company names to filter by
                  example: ["Public Storage", "Extra Space"]
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/REITOccupancyData'

  /facility/pricing/current:
    post:
      tags:
        - Facility Pricing
      summary: Get current facility pricing
      description: Gives you the current pricing information for the units you are requesting at a specific facility
      operationId: getCurrentFacilityPricing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - address
              properties:
                address:
                  type: string
                  example: "123 Main St, Sarasota, FL, 34231, USA"
                unit_sizes:
                  type: array
                  items:
                    type: string
                  description: Array of unit sizes (OR logic - returns any matching size)
                  example: ["5x5", "5x10"]
                features:
                  type: array
                  items:
                    type: string
                  description: Array of features (AND logic - returns units with all specified features)
                  example: ["climate_controlled", "first_floor"]
                pricing_type:
                  type: array
                  items:
                    type: string
                    enum: [web, instore]
                  example: ["web", "instore"]
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityPricingResponse'

  /facility/pricing/historical:
    post:
      tags:
        - Facility Pricing
      summary: Get historical facility pricing
      description: |
        Gives you historical pricing information for the units you are requesting in the 
        requested rollup. We do strict rollups so if the rollup doesn't match the date range, 
        we throw an error. All dates are inclusive.
      operationId: getHistoricalFacilityPricing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - address
                - timeframe
              properties:
                address:
                  type: string
                  example: "123 Main St, Sarasota, FL, 34231, USA"
                timeframe:
                  $ref: '#/components/schemas/Timeframe'
                unit_sizes:
                  type: array
                  items:
                    type: string
                  example: ["5x5"]
                features:
                  type: array
                  items:
                    type: string
                  example: ["climate_controlled", "first_floor"]
                pricing_type:
                  type: array
                  items:
                    type: string
                    enum: [web, instore]
                  example: ["web", "instore"]
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityHistoricalPricingResponse'

  /market/pricing/current:
    post:
      tags:
        - Market Pricing
      summary: Get current market pricing
      description: Gives you the current pricing information for the units you are requesting in a particular market or geography
      operationId: getCurrentMarketPricing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - geography
              properties:
                geography:
                  $ref: '#/components/schemas/Geography'
                unit_sizes:
                  type: array
                  items:
                    type: string
                  example: ["5x5", "5x10"]
                features:
                  type: array
                  items:
                    type: string
                  example: ["climate_controlled"]
                pricing_type:
                  type: array
                  items:
                    type: string
                    enum: [web, instore]
                  example: ["web", "instore"]
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FacilityPricingResponse'

  /market/pricing/current/rollup:
    post:
      tags:
        - Market Pricing
      summary: Get current market pricing (rolled up)
      description: Gives you the current pricing information rolled up for the entire market
      operationId: getCurrentMarketPricingRollup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - geography
              properties:
                geography:
                  $ref: '#/components/schemas/Geography'
                unit_sizes:
                  type: array
                  items:
                    type: string
                  example: ["5x5", "5x10"]
                features:
                  type: array
                  items:
                    type: string
                  example: ["climate_controlled"]
                pricing_type:
                  type: array
                  items:
                    type: string
                    enum: [web, instore]
                  example: ["web", "instore"]
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  units:
                    type: array
                    items:
                      $ref: '#/components/schemas/RolledUpUnit'

  /market/pricing/historical:
    post:
      tags:
        - Market Pricing
      summary: Get historical market pricing
      description: |
        Gives you historical pricing information for the units you are requesting in the 
        requested rollup. Returns data per facility.
      operationId: getHistoricalMarketPricing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - geography
                - timeframe
              properties:
                geography:
                  $ref: '#/components/schemas/Geography'
                timeframe:
                  $ref: '#/components/schemas/Timeframe'
                unit_sizes:
                  type: array
                  items:
                    type: string
                  example: ["5x5", "5x10"]
                features:
                  type: array
                  items:
                    type: string
                  example: ["climate_controlled"]
                pricing_type:
                  type: array
                  items:
                    type: string
                    enum: [web, instore]
                  example: ["web", "instore"]
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityHistoricalPricingResponse'

  /market/pricing/historical/rollup:
    post:
      tags:
        - Market Pricing
      summary: Get historical market pricing (rolled up)
      description: |
        Gives you historical pricing information rolled up for the entire geography.
      operationId: getHistoricalMarketPricingRollup
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - geography
                - timeframe
              properties:
                geography:
                  $ref: '#/components/schemas/Geography'
                timeframe:
                  $ref: '#/components/schemas/Timeframe'
                unit_sizes:
                  type: array
                  items:
                    type: string
                  example: ["5x5", "5x10"]
                features:
                  type: array
                  items:
                    type: string
                  example: ["climate_controlled"]
                pricing_type:
                  type: array
                  items:
                    type: string
                    enum: [web, instore]
                  example: ["web", "instore"]
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  units:
                    type: array
                    items:
                      $ref: '#/components/schemas/RolledUpHistoricalUnit'

components:
  schemas:
    # Geography Types
    Geography:
      oneOf:
        - $ref: '#/components/schemas/CountryGeography'
        - $ref: '#/components/schemas/PolygonGeography'
        - $ref: '#/components/schemas/LatLngRadiusGeography'
        - $ref: '#/components/schemas/LatLngDriveTimeGeography'
        - $ref: '#/components/schemas/LatLngGeography'
        - $ref: '#/components/schemas/USRegionGeography'
        - $ref: '#/components/schemas/USStateGeography'
        - $ref: '#/components/schemas/USCountyGeography'
        - $ref: '#/components/schemas/USCBSAGeography'
        - $ref: '#/components/schemas/USCityGeography'
        - $ref: '#/components/schemas/USZipcodeGeography'
        - $ref: '#/components/schemas/USCensusTractGeography'
        - $ref: '#/components/schemas/USCensusBlockGroupGeography'
        - $ref: '#/components/schemas/USAddressGeography'
        - $ref: '#/components/schemas/USStructuredAddressGeography'
        - $ref: '#/components/schemas/USAddressRadiusGeography'
        - $ref: '#/components/schemas/USAddressDriveTimeGeography'
        - $ref: '#/components/schemas/USStructuredAddressRadiusGeography'
        - $ref: '#/components/schemas/USStructuredAddressDriveTimeGeography'
      discriminator:
        propertyName: type

    CountryGeography:
      type: object
      required:
        - type
        - country
      properties:
        type:
          type: string
          enum: [country]
        country:
          type: string
          example: "USA"

    PolygonGeography:
      type: object
      required:
        - type
        - wkt
      properties:
        type:
          type: string
          enum: [wkt]
        wkt:
          type: string
          example: "POLYGON ((-73.993778 40.770662, -74.012833 40.741403, -73.990517 40.726316, -73.963051 40.747387, -73.954639 40.763901, -73.993778 40.770662))"

    LatLngRadiusGeography:
      type: object
      required:
        - type
        - lat_lng
        - distance
        - units
      properties:
        type:
          type: string
          enum: [lat_lng_radius]
        lat_lng:
          type: array
          items:
            type: number
          minItems: 2
          maxItems: 2
          example: [-12.1234234, 23.1234234]
        distance:
          type: number
          example: 4.2
        units:
          type: string
          enum: [miles, kilometers]
          example: "miles"

    LatLngDriveTimeGeography:
      type: object
      required:
        - type
        - lat_lng
        - drive_time
        - units
      properties:
        type:
          type: string
          enum: [lat_lng_drive_time]
        lat_lng:
          type: array
          items:
            type: number
          minItems: 2
          maxItems: 2
          example: [-13.324233, 12.1234423]
        drive_time:
          type: number
          example: 15
        units:
          type: string
          enum: [minutes]
          example: "minutes"

    LatLngGeography:
      type: object
      required:
        - type
        - lat_lng
      properties:
        type:
          type: string
          enum: [lat_lng]
        lat_lng:
          type: array
          items:
            type: number
          minItems: 2
          maxItems: 2
          example: [-13.324233, 12.1234423]

    USRegionGeography:
      type: object
      required:
        - type
        - region
      properties:
        type:
          type: string
          enum: [us_region]
        region:
          type: string
          example: "Midwest"

    USStateGeography:
      type: object
      required:
        - type
        - state
      properties:
        type:
          type: string
          enum: [us_state]
        state:
          type: string
          example: "NY"

    USCountyGeography:
      type: object
      required:
        - type
        - state
        - county
      properties:
        type:
          type: string
          enum: [us_county]
        state:
          type: string
          example: "NY"
        county:
          type: string
          example: "Tompkins"

    USCBSAGeography:
      type: object
      required:
        - type
        - cbsa
      properties:
        type:
          type: string
          enum: [us_cbsa]
        cbsa:
          type: string
          example: "Dallas-Fort Worth-Arlington, TX"

    USCityGeography:
      type: object
      required:
        - type
        - country
        - state
        - city
      properties:
        type:
          type: string
          enum: [us_city]
        country:
          type: string
          example: "USA"
        state:
          type: string
          example: "TX"
        city:
          type: string
          example: "Dallas"

    USZipcodeGeography:
      type: object
      required:
        - type
        - country
        - zipcode
      properties:
        type:
          type: string
          enum: [us_zipcode]
        country:
          type: string
          example: "US"
        zipcode:
          type: string
          example: "90210"

    USCensusTractGeography:
      type: object
      required:
        - type
        - fips
      properties:
        type:
          type: string
          enum: [us_census_tract]
        fips:
          type: string
          example: "36109012300"

    USCensusBlockGroupGeography:
      type: object
      required:
        - type
        - fips
      properties:
        type:
          type: string
          enum: [us_census_block_group]
        fips:
          type: string
          example: "361090123002"

    USAddressGeography:
      type: object
      required:
        - type
        - address
      properties:
        type:
          type: string
          enum: [us_address]
        address:
          type: string
          example: "2810 Mayflower St, Sarasota, FL 34231, USA"

    USStructuredAddressGeography:
      type: object
      required:
        - type
        - street_address
        - city
        - state
        - zipcode
        - country
      properties:
        type:
          type: string
          enum: [us_structured_address]
        street_address:
          type: string
          example: "2810 Mayflower St."
        address_line_2:
          type: string
          example: ""
        city:
          type: string
          example: "Sarasota"
        state:
          type: string
          example: "FL"
        zipcode:
          type: string
          example: "34231"
        country:
          type: string
          example: "USA"

    USAddressRadiusGeography:
      type: object
      required:
        - type
        - address
        - distance
        - units
      properties:
        type:
          type: string
          enum: [us_address_radius]
        address:
          type: string
          example: "405 Lexington Ave, New York, NY 10174, USA"
        distance:
          type: number
          example: 3.0
        units:
          type: string
          enum: [miles, kilometers]
          example: "miles"

    USAddressDriveTimeGeography:
      type: object
      required:
        - type
        - address
        - drive_time
        - units
      properties:
        type:
          type: string
          enum: [us_address_drive_time]
        address:
          type: string
          example: "405 Lexington Ave, New York, NY 10174, USA"
        drive_time:
          type: number
          example: 15
        units:
          type: string
          enum: [minutes]
          example: "minutes"

    USStructuredAddressRadiusGeography:
      type: object
      required:
        - type
        - address
        - distance
        - units
      properties:
        type:
          type: string
          enum: [us_structured_address_radius]
        address:
          $ref: '#/components/schemas/StructuredAddress'
        distance:
          type: number
          example: 4.2
        units:
          type: string
          enum: [miles, kilometers]
          example: "miles"

    USStructuredAddressDriveTimeGeography:
      type: object
      required:
        - type
        - address
        - drive_time
        - units
      properties:
        type:
          type: string
          enum: [us_structured_address_drive_time]
        address:
          $ref: '#/components/schemas/StructuredAddress'
        drive_time:
          type: number
          example: 15
        units:
          type: string
          enum: [minutes]
          example: "minutes"

    StructuredAddress:
      type: object
      required:
        - street_address
        - city
        - state
        - zipcode
        - country
      properties:
        street_address:
          type: string
          example: "2810 Mayflower St."
        address_line_2:
          type: string
          example: ""
        city:
          type: string
          example: "Sarasota"
        state:
          type: string
          example: "FL"
        zipcode:
          type: string
          example: "34231"
        country:
          type: string
          example: "US"

    # Timeframe Types
    Timeframe:
      type: object
      required:
        - period
        - rollup
      properties:
        period:
          $ref: '#/components/schemas/Period'
        rollup:
          type: string
          enum: [daily, weekly, monthly, quarterly, yearly]
          example: "daily"

    Period:
      oneOf:
        - $ref: '#/components/schemas/DatePeriod'
        - $ref: '#/components/schemas/WeekPeriod'
        - $ref: '#/components/schemas/MonthPeriod'
        - $ref: '#/components/schemas/QuarterPeriod'
        - $ref: '#/components/schemas/YearPeriod'
      discriminator:
        propertyName: type

    DatePeriod:
      type: object
      required:
        - type
        - value
      properties:
        type:
          type: string
          enum: [date]
        value:
          type: string
          description: ISO-8601 date or date range (YYYY-MM-DD or YYYY-MM-DD/YYYY-MM-DD)
          example: "2025-10-13"

    WeekPeriod:
      type: object
      required:
        - type
        - value
      properties:
        type:
          type: string
          enum: [week]
        value:
          type: string
          description: ISO-8601 week or week range (YYYY-Www or YYYY-Www/YYYY-Www)
          example: "2025-W42"

    MonthPeriod:
      type: object
      required:
        - type
        - value
      properties:
        type:
          type: string
          enum: [month]
        value:
          type: string
          description: ISO-8601 month or month range (YYYY-MM or YYYY-MM/YYYY-MM)
          example: "2025-10"

    QuarterPeriod:
      type: object
      required:
        - type
        - value
      properties:
        type:
          type: string
          enum: [quarter]
        value:
          type: string
          description: Quarter or quarter range (YYYY-Qq or YYYY-Qq/YYYY-Qq)
          example: "2025-Q1"

    YearPeriod:
      type: object
      required:
        - type
        - value
      properties:
        type:
          type: string
          enum: [year]
        value:
          type: string
          description: Year or year range (YYYY or YYYY/YYYY)
          example: "2025"

    # REIT Schemas
    REITOccupancyData:
      type: object
      properties:
        date:
          type: string
          example: "2025-Q1"
        company:
          type: string
          example: "Public Storage"
        occupancy:
          type: number
          format: float
          example: 90.13

    # Pricing Response Schemas
    FacilityPricingResponse:
      type: object
      properties:
        facility:
          $ref: '#/components/schemas/Facility'
        units:
          type: array
          items:
            $ref: '#/components/schemas/Unit'

    FacilityHistoricalPricingResponse:
      type: object
      properties:
        facility:
          $ref: '#/components/schemas/Facility'
        units:
          type: array
          items:
            $ref: '#/components/schemas/HistoricalUnit'

    Facility:
      type: object
      properties:
        id:
          type: string
          example: "asdfs-sdfs-vsd-asdvvsa"
        name:
          type: string
          example: "Cubesmart"
        address:
          type: string
          example: "123 Main St, Sarasota, FL, 34231, USA"

    Unit:
      type: object
      properties:
        unit_size:
          type: string
          example: "5x5"
        status:
          type: string
          enum: [available, "sold out"]
          example: "available"
        promo_text:
          type: string
          nullable: true
          example: "1st Month Free"
        features:
          type: array
          items:
            type: string
          example: ["climate_controlled", "first_floor"]
        source_url:
          type: string
          format: uri
          example: "https://example.com/units/5x5"
        pricing:
          type: array
          items:
            $ref: '#/components/schemas/CurrentPricing'

    CurrentPricing:
      type: object
      properties:
        type:
          type: string
          enum: [web, instore]
          example: "web"
        price:
          type: number
          format: float
          example: 97.00
        currency:
          type: string
          example: "USD"
        last_updated:
          type: string
          format: date-time
          example: "2025-10-27T18:41:29Z"

    HistoricalUnit:
      type: object
      properties:
        unit_size:
          type: string
          example: "5x5"
        features:
          type: array
          items:
            type: string
          example: ["climate_controlled", "first_floor"]
        pricing:
          type: array
          items:
            $ref: '#/components/schemas/HistoricalPricing'

    HistoricalPricing:
      type: object
      properties:
        date:
          type: string
          description: Date or date range
          example: "2025-09-13"
        type:
          type: string
          enum: [web, instore]
          example: "web"
        high:
          type: number
          format: float
          nullable: true
          example: 97.00
        low:
          type: number
          format: float
          nullable: true
          example: 97.00
        avg:
          type: number
          format: float
          nullable: true
          example: 97.00
        currency:
          type: string
          example: "USD"

    RolledUpUnit:
      type: object
      properties:
        unit_size:
          type: string
          example: "5x5"
        features:
          type: array
          items:
            type: string
          example: ["climate_controlled", "first_floor"]
        pricing:
          type: array
          items:
            $ref: '#/components/schemas/RolledUpPricing'

    RolledUpPricing:
      type: object
      properties:
        date:
          type: string
          example: "2025-09-13"
        type:
          type: string
          enum: [web, instore]
          example: "web"
        high:
          type: number
          format: float
          example: 197.00
        low:
          type: number
          format: float
          example: 97.00
        avg:
          type: number
          format: float
          example: 127.00
        currency:
          type: string
          example: "USD"

    RolledUpHistoricalUnit:
      type: object
      properties:
        unit_size:
          type: string
          example: "5x5"
        features:
          type: array
          items:
            type: string
          example: ["climate_controlled", "first_floor"]
        pricing:
          type: array
          items:
            $ref: '#/components/schemas/RolledUpHistoricalPricing'

    RolledUpHistoricalPricing:
      type: object
      properties:
        date:
          type: string
          description: Date range matching the rollup period
          example: "2025-09-01/2025-09-30"
        type:
          type: string
          enum: [web, instore]
          example: "web"
        high:
          type: number
          format: float
          example: 197.00
        low:
          type: number
          format: float
          example: 97.00
        avg:
          type: number
          format: float
          example: 127.00
        currency:
          type: string
          example: "USD"

